
container: incoming
add event: eventgrid to storage. with filter: subject begins with   /blobServices/default/containers/incoming/
pointed to Azure Function: EventsProcessingEventGridStarter



The Event.Start property for an all-day event needs to be set to midnight


--------------
add graph-api permission to function's managed identity


# Install the module.
# Install-Module Microsoft.Graph -Scope CurrentUser

# The tenant ID
$TenantId = "11111111-1111-1111-1111-111111111111"

# The name of your web app, which has a managed identity.
$webAppName = "SecureWebApp-20201106120003" 
$resourceGroupName = "SecureWebApp-20201106120003ResourceGroup"

# The name of the app role that the managed identity should be assigned to.
$appRoleName = "User.Read.All"

# Get the web app's managed identity's object ID.
Connect-AzAccount -Tenant $TenantId
$managedIdentityObjectId = (Get-AzWebApp -ResourceGroupName $resourceGroupName -Name $webAppName).identity.principalid

Connect-MgGraph -TenantId $TenantId -Scopes 'Application.Read.All','AppRoleAssignment.ReadWrite.All'

# Get Microsoft Graph app's service principal and app role.
$serverApplicationName = "Microsoft Graph"
$serverServicePrincipal = (Get-MgServicePrincipal -Filter "DisplayName eq '$serverApplicationName'")
$serverServicePrincipalObjectId = $serverServicePrincipal.Id

# The name of the app role that the managed identity should be assigned to.
$appRoleName1 = "User.Read.All"
$appRoleId1 = ($serverServicePrincipal.AppRoles | Where-Object {$_.Value -eq $appRoleName1 }).Id

# Assign the managed identity access to the app role.
New-MgServicePrincipalAppRoleAssignment `
    -ServicePrincipalId $managedIdentityObjectId `
    -PrincipalId $managedIdentityObjectId `
    -ResourceId $serverServicePrincipalObjectId `
    -AppRoleId $appRoleId1


# The name of the app role that the managed identity should be assigned to.
$appRoleName2 = "MailboxSettings.ReadWrite"
$appRoleId2 = ($serverServicePrincipal.AppRoles | Where-Object {$_.Value -eq $appRoleName2 }).Id

# Assign the managed identity access to the app role.
New-MgServicePrincipalAppRoleAssignment `
    -ServicePrincipalId $managedIdentityObjectId `
    -PrincipalId $managedIdentityObjectId `
    -ResourceId $serverServicePrincipalObjectId `
    -AppRoleId $appRoleId2

# The name of the app role that the managed identity should be assigned to.
$appRoleName3 = "Calendars.ReadWrite"
$appRoleId3 = ($serverServicePrincipal.AppRoles | Where-Object {$_.Value -eq $appRoleName3 }).Id

# Assign the managed identity access to the app role.
New-MgServicePrincipalAppRoleAssignment `
    -ServicePrincipalId $managedIdentityObjectId `
    -PrincipalId $managedIdentityObjectId `
    -ResourceId $serverServicePrincipalObjectId `
    -AppRoleId $appRoleId3